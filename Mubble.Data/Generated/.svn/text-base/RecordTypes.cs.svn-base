//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mubble.Data.Raw {
    
    
    public partial class AdminControl : IStandardRecord {
        
        static AdminControl() {
            RecordHelper.RegisterColumn<AdminControl, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<AdminControl, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<AdminControl, string>("FileName", obj => obj.FileName, (obj, val) => obj.FileName = val);
            RecordHelper.RegisterColumn<AdminControl, int>("Order", obj => obj.Order, (obj, val) => obj.Order = val);
            RecordHelper.RegisterColumn<AdminControl, bool>("IsDefault", obj => obj.IsDefault, (obj, val) => obj.IsDefault = val);
            RecordHelper.RegisterColumn<AdminControl, System.Guid>("ModuleControlID", obj => obj.ModuleControlID, (obj, val) => obj.ModuleControlID = val);
            RecordHelper.RegisterAssociation<AdminControl, ModuleControl>("ModuleControl", obj => obj.ModuleControl, (obj, val) => obj.ModuleControl = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class TextBlock : IStandardRecord {
        
        static TextBlock() {
            RecordHelper.RegisterColumn<TextBlock, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<TextBlock, string>("Title", obj => obj.Title, (obj, val) => obj.Title = val);
            RecordHelper.RegisterColumn<TextBlock, string>("Excerpt", obj => obj.Excerpt, (obj, val) => obj.Excerpt = val);
            RecordHelper.RegisterColumn<TextBlock, string>("Body", obj => obj.Body, (obj, val) => obj.Body = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Author : IStandardRecord {
        
        static Author() {
            RecordHelper.RegisterColumn<Author, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Author, string>("UserName", obj => obj.UserName, (obj, val) => obj.UserName = val);
            RecordHelper.RegisterColumn<Author, string>("Email", obj => obj.Email, (obj, val) => obj.Email = val);
            RecordHelper.RegisterColumn<Author, string>("Displayname", obj => obj.Displayname, (obj, val) => obj.Displayname = val);
            RecordHelper.RegisterColumn<Author, string>("Bio", obj => obj.Bio, (obj, val) => obj.Bio = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class ContentItemAuthor : IRecord {
        
        static ContentItemAuthor() {
            RecordHelper.RegisterColumn<ContentItemAuthor, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<ContentItemAuthor, System.Guid>("AuthorID", obj => obj.AuthorID, (obj, val) => obj.AuthorID = val);
            RecordHelper.RegisterAssociation<ContentItemAuthor, Author>("Author", obj => obj.Author, (obj, val) => obj.Author = val);
            RecordHelper.RegisterAssociation<ContentItemAuthor, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class ContentItem : IStandardRecord {
        
        static ContentItem() {
            RecordHelper.RegisterColumn<ContentItem, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<ContentItem, System.Nullable<System.Guid>>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<ContentItem, string>("FileName", obj => obj.FileName, (obj, val) => obj.FileName = val);
            RecordHelper.RegisterColumn<ContentItem, string>("Path", obj => obj.Path, (obj, val) => obj.Path = val);
            RecordHelper.RegisterColumn<ContentItem, System.DateTime>("PublishDate", obj => obj.PublishDate, (obj, val) => obj.PublishDate = val);
            RecordHelper.RegisterColumn<ContentItem, int>("Status", obj => obj.Status, (obj, val) => obj.Status = val);
            RecordHelper.RegisterColumn<ContentItem, System.Guid>("ContentTypeID", obj => obj.ContentTypeID, (obj, val) => obj.ContentTypeID = val);
            RecordHelper.RegisterColumn<ContentItem, System.Nullable<System.Guid>>("TextBlockID", obj => obj.TextBlockID, (obj, val) => obj.TextBlockID = val);
            RecordHelper.RegisterAssociation<ContentItem, Controller>("Controller", obj => obj.Controller, (obj, val) => obj.Controller = val);
            RecordHelper.RegisterAssociation<ContentItem, ContentItem>("ContentItem1", obj => obj.ContentItem1, (obj, val) => obj.ContentItem1 = val);
            RecordHelper.RegisterAssociation<ContentItem, TextBlock>("TextBlock", obj => obj.TextBlock, (obj, val) => obj.TextBlock = val);
            RecordHelper.RegisterAssociation<ContentItem, ContentType>("ContentType", obj => obj.ContentType, (obj, val) => obj.ContentType = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class ContentType : IStandardRecord {
        
        static ContentType() {
            RecordHelper.RegisterColumn<ContentType, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<ContentType, string>("SystemType", obj => obj.SystemType, (obj, val) => obj.SystemType = val);
            RecordHelper.RegisterColumn<ContentType, string>("ActiveObjectType", obj => obj.ActiveObjectType, (obj, val) => obj.ActiveObjectType = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Controller : IRecord {
        
        static Controller() {
            RecordHelper.RegisterColumn<Controller, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<Controller, System.Guid>("TemplateID", obj => obj.TemplateID, (obj, val) => obj.TemplateID = val);
            RecordHelper.RegisterColumn<Controller, string>("TemplateControl", obj => obj.TemplateControl, (obj, val) => obj.TemplateControl = val);
            RecordHelper.RegisterColumn<Controller, System.Guid>("ModuleControlID", obj => obj.ModuleControlID, (obj, val) => obj.ModuleControlID = val);
            RecordHelper.RegisterColumn<Controller, string>("ModuleControlView", obj => obj.ModuleControlView, (obj, val) => obj.ModuleControlView = val);
            RecordHelper.RegisterColumn<Controller, System.Nullable<System.Guid>>("RouteID", obj => obj.RouteID, (obj, val) => obj.RouteID = val);
            RecordHelper.RegisterColumn<Controller, bool>("IsContent", obj => obj.IsContent, (obj, val) => obj.IsContent = val);
            RecordHelper.RegisterColumn<Controller, bool>("IsContentContainer", obj => obj.IsContentContainer, (obj, val) => obj.IsContentContainer = val);
            RecordHelper.RegisterColumn<Controller, string>("Settings", obj => obj.Settings, (obj, val) => obj.Settings = val);
            RecordHelper.RegisterAssociation<Controller, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
            RecordHelper.RegisterAssociation<Controller, ModuleControl>("ModuleControl", obj => obj.ModuleControl, (obj, val) => obj.ModuleControl = val);
            RecordHelper.RegisterAssociation<Controller, Template>("Template", obj => obj.Template, (obj, val) => obj.Template = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class DiscussionProvider : IStandardRecord {
        
        static DiscussionProvider() {
            RecordHelper.RegisterColumn<DiscussionProvider, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<DiscussionProvider, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<DiscussionProvider, string>("ActiveObjectType", obj => obj.ActiveObjectType, (obj, val) => obj.ActiveObjectType = val);
            RecordHelper.RegisterColumn<DiscussionProvider, string>("Settings", obj => obj.Settings, (obj, val) => obj.Settings = val);
            RecordHelper.RegisterColumn<DiscussionProvider, bool>("IsDefault", obj => obj.IsDefault, (obj, val) => obj.IsDefault = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Discussion : IStandardRecord {
        
        static Discussion() {
            RecordHelper.RegisterColumn<Discussion, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Discussion, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<Discussion, System.Guid>("DiscussionProviderID", obj => obj.DiscussionProviderID, (obj, val) => obj.DiscussionProviderID = val);
            RecordHelper.RegisterColumn<Discussion, string>("DiscussionLink", obj => obj.DiscussionLink, (obj, val) => obj.DiscussionLink = val);
            RecordHelper.RegisterColumn<Discussion, int>("Status", obj => obj.Status, (obj, val) => obj.Status = val);
            RecordHelper.RegisterColumn<Discussion, string>("LastStatusMessage", obj => obj.LastStatusMessage, (obj, val) => obj.LastStatusMessage = val);
            RecordHelper.RegisterColumn<Discussion, int>("CommentCount", obj => obj.CommentCount, (obj, val) => obj.CommentCount = val);
            RecordHelper.RegisterAssociation<Discussion, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
            RecordHelper.RegisterAssociation<Discussion, DiscussionProvider>("DiscussionProvider", obj => obj.DiscussionProvider, (obj, val) => obj.DiscussionProvider = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class File : IStandardRecord {
        
        static File() {
            RecordHelper.RegisterColumn<File, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<File, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<File, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<File, string>("FileName", obj => obj.FileName, (obj, val) => obj.FileName = val);
            RecordHelper.RegisterColumn<File, string>("PhysicalPath", obj => obj.PhysicalPath, (obj, val) => obj.PhysicalPath = val);
            RecordHelper.RegisterColumn<File, string>("MediaType", obj => obj.MediaType, (obj, val) => obj.MediaType = val);
            RecordHelper.RegisterColumn<File, string>("MediaSubType", obj => obj.MediaSubType, (obj, val) => obj.MediaSubType = val);
            RecordHelper.RegisterAssociation<File, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class ModuleControl : IStandardRecord {
        
        static ModuleControl() {
            RecordHelper.RegisterColumn<ModuleControl, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<ModuleControl, System.Nullable<int>>("Order", obj => obj.Order, (obj, val) => obj.Order = val);
            RecordHelper.RegisterColumn<ModuleControl, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<ModuleControl, string>("FileName", obj => obj.FileName, (obj, val) => obj.FileName = val);
            RecordHelper.RegisterColumn<ModuleControl, string>("Type", obj => obj.Type, (obj, val) => obj.Type = val);
            RecordHelper.RegisterColumn<ModuleControl, System.Guid>("ModuleID", obj => obj.ModuleID, (obj, val) => obj.ModuleID = val);
            RecordHelper.RegisterColumn<ModuleControl, string>("ControllerActiveObjectType", obj => obj.ControllerActiveObjectType, (obj, val) => obj.ControllerActiveObjectType = val);
            RecordHelper.RegisterColumn<ModuleControl, System.Nullable<bool>>("IsContent", obj => obj.IsContent, (obj, val) => obj.IsContent = val);
            RecordHelper.RegisterColumn<ModuleControl, System.Nullable<bool>>("IsContentContainer", obj => obj.IsContentContainer, (obj, val) => obj.IsContentContainer = val);
            RecordHelper.RegisterAssociation<ModuleControl, Module>("Module", obj => obj.Module, (obj, val) => obj.Module = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Module : IStandardRecord {
        
        static Module() {
            RecordHelper.RegisterColumn<Module, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Module, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<Module, string>("Path", obj => obj.Path, (obj, val) => obj.Path = val);
            RecordHelper.RegisterColumn<Module, System.Nullable<System.DateTime>>("UpdatedAt", obj => obj.UpdatedAt, (obj, val) => obj.UpdatedAt = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Page : IStandardRecord {
        
        static Page() {
            RecordHelper.RegisterColumn<Page, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Page, int>("PageNumber", obj => obj.PageNumber, (obj, val) => obj.PageNumber = val);
            RecordHelper.RegisterColumn<Page, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<Page, System.Nullable<System.Guid>>("TextBlockID", obj => obj.TextBlockID, (obj, val) => obj.TextBlockID = val);
            RecordHelper.RegisterAssociation<Page, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
            RecordHelper.RegisterAssociation<Page, TextBlock>("TextBlock", obj => obj.TextBlock, (obj, val) => obj.TextBlock = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class PermissionFlag : IStandardRecord {
        
        static PermissionFlag() {
            RecordHelper.RegisterColumn<PermissionFlag, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<PermissionFlag, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<PermissionFlag, string>("Flag", obj => obj.Flag, (obj, val) => obj.Flag = val);
            RecordHelper.RegisterColumn<PermissionFlag, System.Guid>("ModuleID", obj => obj.ModuleID, (obj, val) => obj.ModuleID = val);
            RecordHelper.RegisterAssociation<PermissionFlag, Module>("Module", obj => obj.Module, (obj, val) => obj.Module = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Permission : IStandardRecord {
        
        static Permission() {
            RecordHelper.RegisterColumn<Permission, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Permission, System.Guid>("ControllerID", obj => obj.ControllerID, (obj, val) => obj.ControllerID = val);
            RecordHelper.RegisterColumn<Permission, string>("Group", obj => obj.Group, (obj, val) => obj.Group = val);
            RecordHelper.RegisterColumn<Permission, string>("Flag", obj => obj.Flag, (obj, val) => obj.Flag = val);
            RecordHelper.RegisterAssociation<Permission, Controller>("Controller", obj => obj.Controller, (obj, val) => obj.Controller = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Route : IStandardRecord {
        
        static Route() {
            RecordHelper.RegisterColumn<Route, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Route, string>("Pattern", obj => obj.Pattern, (obj, val) => obj.Pattern = val);
            RecordHelper.RegisterColumn<Route, System.Guid>("ModuleControlID", obj => obj.ModuleControlID, (obj, val) => obj.ModuleControlID = val);
            RecordHelper.RegisterColumn<Route, System.Nullable<int>>("Order", obj => obj.Order, (obj, val) => obj.Order = val);
            RecordHelper.RegisterColumn<Route, bool>("IsDefault", obj => obj.IsDefault, (obj, val) => obj.IsDefault = val);
            RecordHelper.RegisterColumn<Route, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<Route, string>("FormatString", obj => obj.FormatString, (obj, val) => obj.FormatString = val);
            RecordHelper.RegisterAssociation<Route, ModuleControl>("ModuleControl", obj => obj.ModuleControl, (obj, val) => obj.ModuleControl = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class RssFeed : IStandardRecord {
        
        static RssFeed() {
            RecordHelper.RegisterColumn<RssFeed, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<RssFeed, string>("Title", obj => obj.Title, (obj, val) => obj.Title = val);
            RecordHelper.RegisterColumn<RssFeed, string>("Link", obj => obj.Link, (obj, val) => obj.Link = val);
            RecordHelper.RegisterColumn<RssFeed, string>("Description", obj => obj.Description, (obj, val) => obj.Description = val);
            RecordHelper.RegisterColumn<RssFeed, string>("ManagingEditor", obj => obj.ManagingEditor, (obj, val) => obj.ManagingEditor = val);
            RecordHelper.RegisterColumn<RssFeed, string>("ItemFormat", obj => obj.ItemFormat, (obj, val) => obj.ItemFormat = val);
            RecordHelper.RegisterColumn<RssFeed, string>("Slug", obj => obj.Slug, (obj, val) => obj.Slug = val);
            RecordHelper.RegisterColumn<RssFeed, string>("RedirectUrl", obj => obj.RedirectUrl, (obj, val) => obj.RedirectUrl = val);
            RecordHelper.RegisterColumn<RssFeed, string>("RedirectExceptions", obj => obj.RedirectExceptions, (obj, val) => obj.RedirectExceptions = val);
            RecordHelper.RegisterColumn<RssFeed, System.Nullable<System.Guid>>("ControllerID", obj => obj.ControllerID, (obj, val) => obj.ControllerID = val);
            RecordHelper.RegisterAssociation<RssFeed, Controller>("Controller", obj => obj.Controller, (obj, val) => obj.Controller = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class ScheduledCommand : IStandardRecord {
        
        static ScheduledCommand() {
            RecordHelper.RegisterColumn<ScheduledCommand, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<ScheduledCommand, System.DateTime>("RunAt", obj => obj.RunAt, (obj, val) => obj.RunAt = val);
            RecordHelper.RegisterColumn<ScheduledCommand, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<ScheduledCommand, string>("Command", obj => obj.Command, (obj, val) => obj.Command = val);
            RecordHelper.RegisterAssociation<ScheduledCommand, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Tag : IStandardRecord {
        
        static Tag() {
            RecordHelper.RegisterColumn<Tag, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Tag, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<Tag, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<Tag, string>("StringValue", obj => obj.StringValue, (obj, val) => obj.StringValue = val);
            RecordHelper.RegisterColumn<Tag, string>("StringValueNormalized", obj => obj.StringValueNormalized, (obj, val) => obj.StringValueNormalized = val);
            RecordHelper.RegisterColumn<Tag, double>("NumericValue", obj => obj.NumericValue, (obj, val) => obj.NumericValue = val);
            RecordHelper.RegisterColumn<Tag, bool>("NormalizeStringValue", obj => obj.NormalizeStringValue, (obj, val) => obj.NormalizeStringValue = val);
            RecordHelper.RegisterAssociation<Tag, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class Template : IStandardRecord {
        
        static Template() {
            RecordHelper.RegisterColumn<Template, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<Template, string>("Name", obj => obj.Name, (obj, val) => obj.Name = val);
            RecordHelper.RegisterColumn<Template, string>("Path", obj => obj.Path, (obj, val) => obj.Path = val);
            RecordHelper.RegisterColumn<Template, System.DateTime>("UpdatedAt", obj => obj.UpdatedAt, (obj, val) => obj.UpdatedAt = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
    
    public partial class UrlRedirect : IStandardRecord {
        
        static UrlRedirect() {
            RecordHelper.RegisterColumn<UrlRedirect, System.Guid>("ID", obj => obj.ID, (obj, val) => obj.ID = val);
            RecordHelper.RegisterColumn<UrlRedirect, string>("Url", obj => obj.Url, (obj, val) => obj.Url = val);
            RecordHelper.RegisterColumn<UrlRedirect, string>("PathExtra", obj => obj.PathExtra, (obj, val) => obj.PathExtra = val);
            RecordHelper.RegisterColumn<UrlRedirect, System.Guid>("ContentItemID", obj => obj.ContentItemID, (obj, val) => obj.ContentItemID = val);
            RecordHelper.RegisterColumn<UrlRedirect, string>("Handler", obj => obj.Handler, (obj, val) => obj.Handler = val);
            RecordHelper.RegisterAssociation<UrlRedirect, ContentItem>("ContentItem", obj => obj.ContentItem, (obj, val) => obj.ContentItem = val);
        }
        
        public object this[string field] {
            get {
                return RecordHelper.Get(this, field);
            }
            set {
                RecordHelper.Set(this, field, value);
            }
        }
    }
}
